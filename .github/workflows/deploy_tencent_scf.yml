name: 部署到腾讯云函数

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: "安装依赖和 serverless 工具"
        run: |
          npm install
          sudo npm install serverless -g

      - name: "将 Secrets 里面配置的变量渲染成 config.json 文件"
        run: |
          cp config.json.template config.json
          if [ $DINGTALK_SECRET ]; then echo "DINGTALK_SECRET 变量存在，并成功赋值" ;else DINGTALK_SECRET="";fi;
          if [ $DINGTALK_ACCESS_TOKEN ]; then echo "DINGTALK_ACCESS_TOKEN 变量存在，并成功赋值" ;else DINGTALK_ACCESS_TOKEN=""; fi;
          if [ $SCKEY ]; then echo "SCKEY 变量存在，并成功赋值" ;else SCKEY=""; fi;
          if [ $QMSG_KEY ]; then echo "QMSG_KEY 变量存在，并成功赋值" ;else QMSG_KEY=""; fi;
          if [ $TG_BOT_TOKEN ]; then echo "TG_BOT_TOKEN 变量存在，并成功赋值" ;else TG_BOT_TOKEN=""; fi;
          if [ $TG_USER_ID ]; then echo "TG_USER_ID 变量存在，并成功赋值" ;else TG_USER_ID=""; fi;
          if [ $IQIYI_COOKIE_LIST ]; then echo "IQIYI_COOKIE_LIST 变量存在，并成功赋值" ;else IQIYI_COOKIE_LIST=[]; fi;
          if [ $VQQ_COOKIE_LIST ]; then echo "VQQ_COOKIE_LIST 变量存在，并成功赋值" ;else VQQ_COOKIE_LIST=[]; fi;
          if [ $POJIE_COOKIE_LIST ]; then echo "POJIE_COOKIE_LIST 变量存在，并成功赋值" ;else POJIE_COOKIE_LIST=[]; fi;
          if [ $YOUDAO_COOKIE_LIST ]; then echo "YOUDAO_COOKIE_LIST 变量存在，并成功赋值" ;else YOUDAO_COOKIE_LIST=[]; fi;
          if [ $KGQQ_COOKIE_LIST ]; then echo "KGQQ_COOKIE_LIST 变量存在，并成功赋值" ;else KGQQ_COOKIE_LIST=[]; fi;
          if [ $MUSIC163_ACCOUNT_LIST ]; then echo "MUSIC163_ACCOUNT_LIST 变量存在，并成功赋值" ;else MUSIC163_ACCOUNT_LIST=[]; fi;
          if [ $BAIDU_URL_SUBMIT_LIST ]; then echo "BAIDU_URL_SUBMIT_LIST 变量存在，并成功赋值" ;else BAIDU_URL_SUBMIT_LIST=[]; fi;
          if [ $CITY_NAME_LIST ]; then echo "CITY_NAME_LIST 变量存在，并成功赋值" ;else CITY_NAME_LIST=[]; fi;
          if [ $MOTTO ]; then echo "MOTTO 变量存在，并成功赋值" ;else MOTTO=false; fi;
          if [ $XMLY_COOKIE_LIST ]; then echo "XMLY_COOKIE_LIST 变量存在，并成功赋值" ;else XMLY_COOKIE_LIST=[]; fi;
          if [ $ONEPLUSBBS_COOKIE_LIST ]; then echo "ONEPLUSBBS_COOKIE_LIST 变量存在，并成功赋值" ;else ONEPLUSBBS_COOKIE_LIST=[]; fi;
          if [ $QQREAD_ACCOUNT_LIST ]; then echo "QQREAD_ACCOUNT_LIST 变量存在，并成功赋值" ;else QQREAD_ACCOUNT_LIST=[]; fi;
          sed -i "s/DINGTALK_SECRET/$DINGTALK_SECRET/" config.json
          sed -i "s/DINGTALK_ACCESS_TOKEN/$DINGTALK_ACCESS_TOKEN/" config.json
          sed -i "s/SCKEY/$SCKEY/" config.json
          sed -i "s/QMSG_KEY/$QMSG_KEY/" config.json
          sed -i "s/TG_BOT_TOKEN/$TG_BOT_TOKEN/" config.json
          sed -i "s/TG_USER_ID/$TG_USER_ID/" config.json
          sed -i "s/IQIYI_COOKIE_LIST/$IQIYI_COOKIE_LIST/" config.json
          sed -i "s/VQQ_COOKIE_LIST/$VQQ_COOKIE_LIST/" config.json
          sed -i "s/POJIE_COOKIE_LIST/$POJIE_COOKIE_LIST/" config.json
          sed -i "s/YOUDAO_COOKIE_LIST/$YOUDAO_COOKIE_LIST/" config.json
          sed -i "s/KGQQ_COOKIE_LIST/$KGQQ_COOKIE_LIST/" config.json
          sed -i "s/MUSIC163_ACCOUNT_LIST/$MUSIC163_ACCOUNT_LIST/" config.json
          sed -i "s/BAIDU_URL_SUBMIT_LIST/$BAIDU_URL_SUBMIT_LIST/" config.json
          sed -i "s/CITY_NAME_LIST/$CITY_NAME_LIST/" config.json
          sed -i "s/MOTTO/$MOTTO/" config.json
          sed -i "s/XMLY_COOKIE_LIST/$XMLY_COOKIE_LIST/" config.json
          sed -i "s/ONEPLUSBBS_COOKIE_LIST/$ONEPLUSBBS_COOKIE_LIST/" config.json
          sed -i "s/QQREAD_ACCOUNT_LIST/$QQREAD_ACCOUNT_LIST/" config.json
          cat config.json
        env: #因为直接读取secrets里面的值很多字符不会自动转译，导致写入serverless.yml异常，所以设置到环境变量，在读取环境变量转译过的值
          DINGTALK_SECRET: ${{ secrets.DINGTALK_SECRET }}
          DINGTALK_ACCESS_TOKEN: ${{secrets.DINGTALK_ACCESS_TOKEN}}
          SCKEY: ${{secrets.SCKEY}}
          TG_BOT_TOKEN: ${{secrets.TG_BOT_TOKEN}}
          TG_USER_ID: ${{secrets.TG_USER_ID}}
          QMSG_KEY: ${{secrets.QMSG_KEY}}
          MOTTO: ${{secrets.MOTTO}}
          IQIYI_COOKIE_LIST: ${{secrets.IQIYI_COOKIE_LIST}}
          BAIDU_URL_SUBMIT_LIST: ${{secrets.BAIDU_URL_SUBMIT_LIST}}
          VQQ_COOKIE_LIST: ${{secrets.VQQ_COOKIE_LIST}}
          YOUDAO_COOKIE_LIST: ${{secrets.YOUDAO_COOKIE_LIST}}
          POJIE_COOKIE_LIST: ${{secrets.POJIE_COOKIE_LIST}}
          KGQQ_COOKIE_LIST: ${{secrets.KGQQ_COOKIE_LIST}}
          MUSIC163_ACCOUNT_LIST: ${{secrets.MUSIC163_ACCOUNT_LIST}}
          CITY_NAME_LIST: ${{secrets.CITY_NAME_LIST}}
          ONEPLUSBBS_COOKIE_LIST: ${{secrets.ONEPLUSBBS_COOKIE_LIST}}
          QQREAD_ACCOUNT_LIST: ${{secrets.QQREAD_ACCOUNT_LIST}}
          XMLY_COOKIE_LIST: ${{secrets.XMLY_COOKIE_LIST}}

      - name: "部署到腾讯云函数"
        run: serverless deploy
        env:
          STAGE: dev
          SERVERLESS_PLATFORM_VENDOR: tencent
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
